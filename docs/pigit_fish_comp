function _pigit_completion;
    set -l response;

    for value in (env cF --commit bd R -h pc -r Rx Rs wm Rl -c ws pa push f cO l1 mF cm add pull user c ld sd --issue wM Si fc savepd --complete wD cr pt --create-ignore --count --dry-run cd --create-config wC ir pA Ra rename --print CO --simple lc Ru -v wc Cl iA clear bm fu pp b cmd -i l SD sl -t ca cR Rp Ce fm lr t --show-commands ls --types lv s Ct --path RS wX Sd iu open wR mt mC fr bL Co ta Ca -p -s iR sD cs rm iD Sc ue --shell --reverse -f CT ia cf email bc wd ll mv iX co ix p pF wx bl cA repo Su fetch --information sp tx fb --config bS m id bs --version pf --show-part-command wr --help mS Rm fC bM --report wS ma=fish_complete COMP_WORDS=(commandline -cp)         COMP_CWORD=(commandline -t) pigit);
        set response $response $value;
    end;

    for completion in $response;
        set -l metadata (string split "," $completion);

        if test $metadata[1] = "dir";
            __fish_complete_directories $metadata[2];
        else if test $metadata[1] = "file";
            __fish_complete_path $metadata[2];
        else if test $metadata[1] = "plain";
            print $metadata[2];
        end;
    end;
end;

complete --no-files --command pigit --arguments         "(_pigit_completion)";
