function _pigit_completion;
    set -l response;

    for value in (env fu cO sD wr iu l1 --show-commands p fetch mv Si cs pull ls -i fb t sd --print mS --commit Rl mt --types ld iA RS -v mC --report open ix --reverse bS Su --version -c --config cm ll --simple l pp iD --complete cd fc savepd SD wS Rm wD wR pc Sc wx iR mF CO ir sp bL add Ct -s cf ia -f bM Ru --dry-run Rs rename push bl cF pF cr wc --path repo ca wX --help -h CT pt fr bc iX rm lv Rp --count co tx Co bm c bd ue id fC -t wd wM --shell fm -r Cl --information f ws ta Ra cmd lc --create-config Ca clear m user pA b ma --show-part-command lr wm s pf cR bs Ce email wC cA Rx --create-ignore R sl --issue Sd pa -p=fish_complete COMP_WORDS=(commandline -cp)         COMP_CWORD=(commandline -t) pigit);
        set response $response $value;
    end;

    for completion in $response;
        set -l metadata (string split "," $completion);

        if test $metadata[1] = "dir";
            __fish_complete_directories $metadata[2];
        else if test $metadata[1] = "file";
            __fish_complete_path $metadata[2];
        else if test $metadata[1] = "plain";
            print $metadata[2];
        end;
    end;
end;

complete --no-files --command pigit --arguments         "(_pigit_completion)";
