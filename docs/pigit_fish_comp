function _pigit_completion;
    set -l response;

    for value in (env pt Ct Rm cF -h open clear wx --create-config fb wR lv --dry-run --help Ce wC ws --types iD fC mS f --version --information -p RS pa email fetch push m bd pc t wr Sd -v fc --complete fm Ru SD --reverse s ls add c R ir pA iX fu Si wX bc --issue b mv --report ld rename cm --config id Rs wD savepd mt Su cA -t --print cR mC sl CT lr --show-part-command sd wM sD iA cd pF --shell ca Cl bl co iu repo ia --path Rl tx wm l Rp cr pp bm pf cf ma ll --commit Ra p ue cs bS -s cO Co mF --show-commands wS wc cmd --simple user sp -r wd -i bL Ca l1 rm --create-ignore bM bs --count -f lc Rx iR Sc pull ta CO fr ix -c=fish_complete COMP_WORDS=(commandline -cp)         COMP_CWORD=(commandline -t) pigit);
        set response $response $value;
    end;

    for completion in $response;
        set -l metadata (string split "," $completion);

        if test $metadata[1] = "dir";
            __fish_complete_directories $metadata[2];
        else if test $metadata[1] = "file";
            __fish_complete_path $metadata[2];
        else if test $metadata[1] = "plain";
            print $metadata[2];
        end;
    end;
end;

complete --no-files --command pigit --arguments         "(_pigit_completion)";
